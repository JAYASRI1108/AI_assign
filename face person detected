import cv2

def detect_faces():
    # Load the pre-trained Haar Cascade Classifier for face detection
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

    # Open the webcam
    webcam = cv2.VideoCapture(0)

    while True:
        # Read a frame from the webcam
        _, frame = webcam.read()

        # Convert the frame to grayscale for face detection
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

        # Detect faces in the frame
        faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=4)

        if len(faces) > 0:
            # Display "Person detected" message
            cv2.putText(frame, "Person detected", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
        else:
            # Display "No Person Detected" message
            cv2.putText(frame, "No Person Detected", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)

        # Draw rectangles around detected faces
        for (x, y, w, h) in faces:
            cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)

        # Display the frame with messages and rectangles
        cv2.imshow('Face Detection', frame)

        # Break the loop if 'Esc' key is pressed
        key = cv2.waitKey(1)
        if key == 27:
            break

    # Release the webcam
    webcam.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    detect_faces()
